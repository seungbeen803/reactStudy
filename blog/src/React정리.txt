JSX란
자바스크립트 안에서 html을 쉽게 작성할 수 있게 도와주는 방법
.js 파일에서 쓰는 html 대용품

JSX 문법
1. class 넣을 땐 className
2. 변수를 넣을 때 {중괄호} => 데이터바인딩은{중괄호}
3. style 넣을 땐 style={{스타일명 : '값'}}

state
자료를 잠깐 저장할 때 state를 사용
state 만드는 법
  1. import { useState }
  2. useState(보관할 자료)
  3. letlet[작명, 작명] => [state에 보관했던 자료, state 변경도와주는 함수]

state문법 쓰는 이유
변수, state 차이점
 -> 일반 변수는 갑자기 변경되면 html에 자동으로 반영이 안되지만,
 state는 갑자기 변경되면 state를 쓰던 html은 자동 재렌더링 되므로 편리하다

state 언제 써야함?
 -> 변동시 자동으로 html에 반영되게 만들고 싶으면 state를 사용한다

 Component
 <Modal/> -> 컴포넌트

 컴포넌트 만드는 법
  1. function 만들기
  2. return() 안에 html담기
  3. <함수명></함수명>쓰기

컴포넌트로 만들면 좋은 점
  1. 반복적인 html 축약할 때
  2. 큰 페이지들 전환할 때
  3. 자주 변경되는 것들

컴포넌트의 단점
    -> state를 가져다 쓸 때 문제가 생김

의미없는 <div> 대신 <></>사용가능

동적인 UI만드는 step
1. html css로 미리 디자인 완성
2. UI의 현재 상태를 state로 저장
3. state에 따라 UI가 어떻게 보일지 작성(조건문)

자식이 부모의 state를 가져다 쓰고 싶을 때는 props 사용
부모 -> 자식 state 전송하는 법
1. <자식컴포넌트 작명={state이름}>
2. props 파라미터 등록 후 props 작명 사용